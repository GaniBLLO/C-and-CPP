#include<stdio.h> 

typedef unsigned int        UInt16;

typedef struct {
	union
	{
		UInt16 all;
		struct {
			UInt16 dout0 : 1;
			UInt16 dout1 : 1;
			UInt16 dout2 : 1;
			UInt16 dout3 : 1;
			UInt16 dout4 : 1;
			UInt16 dout5 : 1;
			UInt16 dout6 : 1;
			UInt16 dout7 : 1;
			UInt16 dout8 : 1;
			UInt16 dout9 : 1;
			UInt16 dout10 : 1;
			UInt16 dout11 : 1;
			UInt16 dout12 : 1;
			UInt16 dout13 : 1;
			UInt16 dout14 : 1;
			UInt16 dout15 : 1;
		}bit;
	} data_out;
} T_cds_out_write_sbus;

typedef struct {
	union
	{
		UInt16 all;
		struct {
			UInt16 in0 : 1;
			UInt16 in1 : 1;
			UInt16 in2 : 1;
			UInt16 in3 : 1;
			UInt16 in4 : 1;
			UInt16 in5 : 1;
			UInt16 in6 : 1;
			UInt16 in7 : 1;
			UInt16 in8 : 1;
			UInt16 in9 : 1;
			UInt16 in10 : 1;
			UInt16 in11 : 1;
			UInt16 in12 : 1;
			UInt16 in13 : 1;
			UInt16 in14 : 1;
			UInt16 in15 : 1;
		}bit;
	} data_in;
}T_cds_in_read_pbus;



int main()
{ 
	UInt16 mask = 0x1;
	int step = 0, error = 0, check = 1;
	T_cds_out_write_sbus out;			//Объявление
	out.data_out.all = 0xFFFFF;		//Инициализация
	out.data_out.all <<= mask;
	out.data_out.bit.dout2 = 0;

	T_cds_in_read_pbus in;
	in.data_in.all = 0;
	

	T_cds_in_read_pbus* IN = &in;				
	T_cds_out_write_sbus* OUT = &out;			

	
	for (int i = 0; i < 16; i++, mask <<= 1, step++)
		{
			if (step == 0)
				{
					in.data_in.all = ~out.data_out.all;
					check++;
					mask <<= 1;
				}
			else if ((IN->data_in.all | mask) != (OUT->data_out.all & mask) && check != 0 && step > 0)
				{
					in.data_in.all = ~out.data_out.all;
					check--;
				}
			else if ((IN->data_in.all | mask) == (OUT->data_out.all & mask) && check != 0 && step > 0)
				{
									
				}
			out.data_out.all <<= 1;
			out.data_out.all |= ~mask;
			check++;
		}


    return 0;
}